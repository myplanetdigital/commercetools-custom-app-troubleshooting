{"version":3,"sources":["webpack:///./src/components/main-view/main-view.mod.css","webpack:///./src/components/view-one/messages.js","webpack:///./src/components/view-one/view-one.js","webpack:///./src/components/view-two/messages.js","webpack:///./src/components/view-two/view-two.js","webpack:///./src/components/main-view/messages.js","webpack:///./src/components/main-view/main-view.js","webpack:///./src/routes.js"],"names":["module","exports","defineMessages","title","id","description","defaultMessage","ViewOne","Body","intlMessage","messages","displayName","ViewTwo","labelLinkOne","labelLinkTwo","MainView","props","Inset","scale","Stack","Headline","as","className","styles","Inline","label","Link","to","match","url","icon","path","component","PageUnauthorized","imageSrc","LockedDiamondSVG","paragraph1","ApplicationRoutes","useIsAuthorized","demandedPermissions","PERMISSIONS","ViewProducts","render","routerProps"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,aAAa,sC,k3BCChBC,cAAe,CAC5BC,MAAO,CACLC,GAAI,gBACJC,YAAa,6BACbC,eAAgB,c,6DCFdC,EAAU,SAAVA,UAAU,OAAM,YAAC,IAAKC,KAAN,CAAWC,YAAaC,EAASP,SACvDI,EAAQI,YAAc,UAEPJ,QCLAL,cAAe,CAC5BC,MAAO,CACLC,GAAI,gBACJC,YAAa,6BACbC,eAAgB,cCFdM,EAAU,SAAVA,UAAU,OAAM,YAAC,IAAKJ,KAAN,CAAWC,YAAaC,EAASP,SACvDS,EAAQD,YAAc,UAEPC,QCLAV,cAAe,CAC5BC,MAAO,CACLC,GAAI,iBACJC,YAAa,8BACbC,eAAgB,gBAElBO,aAAc,CACZT,GAAI,wBACJC,YAAa,qCACbC,eAAgB,YAElBQ,aAAc,CACZV,GAAI,wBACJC,YAAa,qCACbC,eAAgB,c,6DCHdS,EAAW,SAAXA,SAAYC,GAAD,OACf,YAAC,IAASC,MAAV,CAAgBC,MAAM,KACpB,YAAC,IAASC,MAAV,CAAgBD,MAAM,KACpB,YAAC,IAAKE,SAAN,CAAeC,GAAG,KAAKZ,YAAaC,EAASP,QAC7C,mBAAKmB,UAAWC,IAAO,eACrB,YAAC,IAASC,OAAV,CAAiBN,MAAM,KACrB,YAAC,IAAqBR,EAASG,cAC5B,SAACY,GAAD,OACC,YAAC,IAAD,CACEJ,GAAIK,IACJC,GAAE,UAAKX,EAAMY,MAAMC,IAAjB,QACFC,KAAM,YAAC,IAAD,MACNL,MAAOA,OAIb,YAAC,IAAqBf,EAASI,cAC5B,SAACW,GAAD,OACC,YAAC,IAAD,CACEJ,GAAIK,IACJC,GAAE,UAAKX,EAAMY,MAAMC,IAAjB,QACFC,KAAM,YAAC,IAAD,MACNL,MAAOA,SAMjB,YAAC,IAAD,KACE,YAAC,IAAD,CAAOM,KAAI,UAAKf,EAAMY,MAAMG,KAAjB,QAA6BC,UAAWzB,IACnD,YAAC,IAAD,CAAOwB,KAAI,UAAKf,EAAMY,MAAMG,KAAjB,QAA6BC,UAAWpB,QAK3DG,EAASJ,YAAc,WAWRI,Q,0BClDTkB,EAAmB,SAAnBA,mBAAmB,OACvB,YAAC,IAAD,CACEC,SAAUC,IACVhC,MAAM,iDACNiC,WAAW,gFAITC,EAAoB,SAApBA,kBAAqB,GAAc,IAAZT,EAAY,EAAZA,MAI3B,OAHwBU,YAAgB,CACtCC,oBAAqB,CAACC,IAAYC,gBAMlC,YAAC,IAAD,KACE,YAAC,IAAD,CACEV,KAAI,UAAKH,EAAMG,KAAX,qBACJW,OAAQ,yBAAM,uBAAM,qBAEtB,YAAC,IAAD,CAAOA,OAAQ,gBAACC,GAAD,OAAiB,YAAC,EAAD,CAAUf,MAAOe,EAAYf,YARxD,YAAC,EAAD,OAYXS,EAAkB1B,YAAc,oBAUjB0B","file":"38.starter-routes.193e39213ddc124216fd.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-header\":\"main-view-mod__nav-header___1yOcj\"};","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'ViewOne.title',\n    description: 'The page title of view one',\n    defaultMessage: 'View one',\n  },\n});\n","import React from 'react';\nimport Text from '@commercetools-uikit/text';\nimport messages from './messages';\n\nconst ViewOne = () => <Text.Body intlMessage={messages.title} />;\nViewOne.displayName = 'ViewOne';\n\nexport default ViewOne;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'ViewTwo.title',\n    description: 'The page title of view two',\n    defaultMessage: 'View two',\n  },\n});\n","import React from 'react';\nimport Text from '@commercetools-uikit/text';\nimport messages from './messages';\n\nconst ViewTwo = () => <Text.Body intlMessage={messages.title} />;\nViewTwo.displayName = 'ViewTwo';\n\nexport default ViewTwo;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'MainView.title',\n    description: 'The page title of main view',\n    defaultMessage: 'Hello, world',\n  },\n  labelLinkOne: {\n    id: 'MainView.labelLinkOne',\n    description: 'The label for the link to page one',\n    defaultMessage: 'Page one',\n  },\n  labelLinkTwo: {\n    id: 'MainView.labelLinkTwo',\n    description: 'The label for the link to page two',\n    defaultMessage: 'Page two',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { ListIcon, TableIcon } from '@commercetools-uikit/icons';\nimport Text from '@commercetools-uikit/text';\nimport Spacings from '@commercetools-uikit/spacings';\nimport FlatButton from '@commercetools-uikit/flat-button';\nimport ViewOne from '../view-one';\nimport ViewTwo from '../view-two';\nimport messages from './messages';\nimport styles from './main-view.mod.css';\n\nconst MainView = (props) => (\n  <Spacings.Inset scale=\"m\">\n    <Spacings.Stack scale=\"m\">\n      <Text.Headline as=\"h1\" intlMessage={messages.title} />\n      <div className={styles['nav-header']}>\n        <Spacings.Inline scale=\"s\">\n          <FormattedMessage {...messages.labelLinkOne}>\n            {(label) => (\n              <FlatButton\n                as={Link}\n                to={`${props.match.url}/one`}\n                icon={<ListIcon />}\n                label={label}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage {...messages.labelLinkTwo}>\n            {(label) => (\n              <FlatButton\n                as={Link}\n                to={`${props.match.url}/two`}\n                icon={<TableIcon />}\n                label={label}\n              />\n            )}\n          </FormattedMessage>\n        </Spacings.Inline>\n      </div>\n      <Switch>\n        <Route path={`${props.match.path}/one`} component={ViewOne} />\n        <Route path={`${props.match.path}/two`} component={ViewTwo} />\n      </Switch>\n    </Spacings.Stack>\n  </Spacings.Inset>\n);\nMainView.displayName = 'MainView';\nMainView.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      projectKey: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MainView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { useIsAuthorized } from '@commercetools-frontend/permissions';\nimport LockedDiamondSVG from '@commercetools-frontend/assets/images/locked-diamond.svg';\nimport { MaintenancePageLayout } from '@commercetools-frontend/application-components';\nimport MainView from './components/main-view';\nimport { PERMISSIONS } from './constants';\n\nconst PageUnauthorized = () => (\n  <MaintenancePageLayout\n    imageSrc={LockedDiamondSVG}\n    title=\"Not enough permissions to access this resource\"\n    paragraph1=\"We recommend to contact your project administrators for further questions.\"\n  />\n);\n\nconst ApplicationRoutes = ({ match }) => {\n  const canViewProducts = useIsAuthorized({\n    demandedPermissions: [PERMISSIONS.ViewProducts],\n  });\n  if (!canViewProducts) {\n    return <PageUnauthorized />;\n  }\n  return (\n    <Switch>\n      <Route\n        path={`${match.path}/some-other-route`}\n        render={() => <div>{'Nothing to see'}</div>}\n      />\n      <Route render={(routerProps) => <MainView match={routerProps.match} />} />\n    </Switch>\n  );\n};\nApplicationRoutes.displayName = 'ApplicationRoutes';\nApplicationRoutes.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string,\n    params: PropTypes.shape({\n      projectKey: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ApplicationRoutes;\n"],"sourceRoot":""}